---@type vim.lsp.Config
return {
  root_markers = {
    'package.json',
    '.git',
  },
  settings = {
    css = {
      validate = true,
      lint = {
        compatibleVendorPrefixes = 'ignore',
        vendorPrefix = 'warning',
        duplicateProperties = 'warning',
        emptyRules = 'warning',
        importStatement = 'ignore',
        boxModel = 'ignore',
        universalSelector = 'ignore',
        zeroUnits = 'ignore',
        fontFaceProperties = 'warning',
        hexColorLength = 'error',
        argumentsInColorFunction = 'error',
        unknownProperties = 'warning',
        ieHack = 'ignore',
        unknownVendorSpecificProperties = 'ignore',
        propertyIgnoredDueToDisplay = 'warning',
        important = 'ignore',
        float = 'ignore',
        idSelector = 'ignore',
      },
      completion = {
        triggerPropertyValueCompletion = true,
        completePropertyWithSemicolon = true,
      },
      hover = {
        documentation = true,
        references = true,
      },
      format = {
        enable = true,
        newlineBetweenSelectors = true,
        newlineBetweenRules = true,
        spaceAroundSelectorSeparator = false,
        braceStyle = 'collapse',
        maxPreserveNewLines = 2,
        preserveNewLines = true,
      },
    },
    scss = {
      validate = true,
      lint = {
        compatibleVendorPrefixes = 'ignore',
        vendorPrefix = 'warning',
        duplicateProperties = 'warning',
        emptyRules = 'warning',
        importStatement = 'ignore',
        boxModel = 'ignore',
        universalSelector = 'ignore',
        zeroUnits = 'ignore',
        fontFaceProperties = 'warning',
        hexColorLength = 'error',
        argumentsInColorFunction = 'error',
        unknownProperties = 'warning',
        ieHack = 'ignore',
        unknownVendorSpecificProperties = 'ignore',
        propertyIgnoredDueToDisplay = 'warning',
        important = 'ignore',
        float = 'ignore',
        idSelector = 'ignore',
      },
      completion = {
        triggerPropertyValueCompletion = true,
        completePropertyWithSemicolon = true,
      },
      hover = {
        documentation = true,
        references = true,
      },
      format = {
        enable = true,
        newlineBetweenSelectors = true,
        newlineBetweenRules = true,
        spaceAroundSelectorSeparator = false,
        braceStyle = 'collapse',
        maxPreserveNewLines = 2,
        preserveNewLines = true,
      },
    },
    less = {
      validate = true,
      lint = {
        compatibleVendorPrefixes = 'ignore',
        vendorPrefix = 'warning',
        duplicateProperties = 'warning',
        emptyRules = 'warning',
        importStatement = 'ignore',
        boxModel = 'ignore',
        universalSelector = 'ignore',
        zeroUnits = 'ignore',
        fontFaceProperties = 'warning',
        hexColorLength = 'error',
        argumentsInColorFunction = 'error',
        unknownProperties = 'warning',
        ieHack = 'ignore',
        unknownVendorSpecificProperties = 'ignore',
        propertyIgnoredDueToDisplay = 'warning',
        important = 'ignore',
        float = 'ignore',
        idSelector = 'ignore',
      },
      completion = {
        triggerPropertyValueCompletion = true,
        completePropertyWithSemicolon = true,
      },
      hover = {
        documentation = true,
        references = true,
      },
      format = {
        enable = true,
        newlineBetweenSelectors = true,
        newlineBetweenRules = true,
        spaceAroundSelectorSeparator = false,
        braceStyle = 'collapse',
        maxPreserveNewLines = 2,
        preserveNewLines = true,
      },
    },
  },
}
